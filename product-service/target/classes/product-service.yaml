swagger: '2.0'
info:
  description: This is a simple product-service
  version: 1.0.0
  title: product-service
  # put the contact info for your development or API team
  contact:
    email: nrkapri@gmail.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: product
  description: this is simle product-service

paths:
  /product:
    get:
      tags:
      - product
      summary: search products
      operationId: searchProducts
      description: |
        By passing in the appropriate options, you can search for
        available products in the system
      produces:
      - application/json
      parameters:
      - in: query
        name: produceName
        description: pass an optional search string for looking up products
        required: false
        type: string
      - in: query
        name: skip
        description: number of records to skip for pagination
        type: integer
        format: int32
        minimum: 0
      - in: query
        name: limit
        description: maximum number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 50
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductItem'
        400:
          description: bad input parameter
    post:
      tags:
      - product
      summary: adds an producte item
      operationId: addProduct
      description: Adds an product to the system
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: productItem
        description: Product item to add
        schema:
          $ref: '#/definitions/ProductItem'
      responses:
        201:
          description: product created
          schema:
            type: integer
            format: int64
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
  /product/{productId}:
    get:
      tags:
      - product
      summary: Find product by Id
      description: Returns a single Product
      operationId: getProductById
      produces:
       - application/json
       - application/xml
      parameters:
      - name: productId
        in: path
        description: ID of product to return
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductItem'
        400:
          description: Invalid ID supplied
        404:
          description: product not found
    patch:
      tags:
      - product
      summary: Updates a product Manufacturer
      operationId: updateProductManufacturer
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: productId
        in: path
        description: ID of product that needs to be updated
        required: true
        type: string
        format: uuid
      - name: name
        in: body
        description: Updated Manufacturer of the product
        required: false
        schema:
          $ref: '#/definitions/ProductItem'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Product not found
        405:
          description: Validation exception
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ProductItem'
      
    delete:
      tags:
      - product
      summary: Deletes a product
      operationId: deleteProduct
      produces:
      - application/json
      - application/xml
      parameters:
      - name: productId
        in: path
        description: Product id to delete
        required: true
        type: string
        format: uuid
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Product not found
        200:
          description: successful operation
          
definitions:
  ProductItem:
    type: object
    required:
    - id
    - name
    - manufacturer
    - releaseDate
    - price
    properties:
      id:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      name:
        type: string
        example: Widget Adapter
      releaseDate:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z
      manufacturer:
        $ref: '#/definitions/Manufacturer'
      price:
        type: number
        format: double
        example: 1.05
  Manufacturer:
    required:
    - name
    properties:
      name:
        type: string
        example: ACME Corporation
      homePage:
        type: string
        format: url
        example:  https://www.acme-corp.com
      phone:
        type: string
        example: 408-867-5309

host: virtserver.swaggerhub.com

basePath: /n411/product-service/1.0.0

schemes:
 - http